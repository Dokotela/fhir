import 'package:fhir/primitiveTypes/base64binary.dart';
import 'package:fhir/primitiveTypes/instant.dart';
import 'package:fhir/primitiveTypes/oid.dart';
import 'package:fhir/primitiveTypes/time.dart';
import 'package:fhir/primitiveTypes/uuid.dart';
import 'package:freezed_annotation/freezed_annotation.dart';

import '../../fhir_r4.dart';
import 'special_types.enums.dart';

part 'special_types.g.dart';
part 'special_types.freezed.dart';

@freezed
abstract class SpecialTypes with _$SpecialTypes {
  const factory SpecialTypes.dosage({
    String id,
    @JsonKey(name: 'extension') List<FhirExtension> fhirExtension,
    List<FhirExtension> modifierExtension,
    int sequence,
    String text,
    List<CodeableConcept> additionalInstruction,
    String patientInstruction,
    Timing timing,
    bool asNeededBoolean,
    CodeableConcept asNeededCodeableConcept,
    CodeableConcept site,
    CodeableConcept route,
    CodeableConcept method,
    List<DosageDoseAndRate> doseAndRate,
    Ratio maxDosePerPeriod,
    Quantity maxDosePerAdministration,
    Quantity maxDosePerLifetime,
  }) = Dosage;

  const factory SpecialTypes.dosageDoseAndRate({
    String id,
    @JsonKey(name: 'extension') List<FhirExtension> fhirExtension,
    List<FhirExtension> modifierExtension,
    CodeableConcept type,
    Range doseRange,
    Quantity doseQuantity,
    Ratio rateRatio,
    Range rateRange,
    Quantity rateQuantity,
  }) = DosageDoseAndRate;

  // ********* Element Definition *********
  const factory SpecialTypes.elementDefinition({
    String id,
    @JsonKey(name: 'extension') List<FhirExtension> fhirExtension,
    List<FhirExtension> modifierExtension,
    String path,
    List<ElementDefinitionRepresentation> representation,
    String sliceName,
    bool sliceIsConstraining,
    String label,
    List<Coding> code,
    ElementDefinitionSlicing slicing,
    String short,
    Markdown definition,
    Markdown comment,
    Markdown requirements,
    List<String> alias,
    int min,
    String max,
    ElementDefinitionBase base,
    FhirUri contentReference,
    List<ElementDefinitionType> type,
    Base64Binary defaultValueBase64Binary,
    bool defaultValueBoolean,
    Canonical defaultValueCanonical,
    Code defaultValueCode,
    Date defaultValueDate,
    FhirDateTime defaultValueDateTime,
    double defaultValueDecimal,
    Id defaultValueId,
    Instant defaultValueInstant,
    int defaultValueInteger,
    Markdown defaultValueMarkdown,
    Oid defaultValueOid,
    int defaultValuePositiveInt,
    String defaultValueString,
    Time defaultValueTime,
    int defaultValueUnsignedInt,
    FhirUri defaultValueUri,
    FhirUrl defaultValueUrl,
    Uuid defaultValueUuid,
    Address defaultValueAddress,
    Age defaultValueAge,
    Annotation defaultValueAnnotation,
    Attachment defaultValueAttachment,
    CodeableConcept defaultValueCodeableConcept,
    Coding defaultValueCoding,
    ContactPoint defaultValueContactPoint,
    Count defaultValueCount,
    Distance defaultValueDistance,
    Duration defaultValueDuration,
    HumanName defaultValueHumanName,
    Identifier defaultValueIdentifier,
    Money defaultValueMoney,
    Period defaultValuePeriod,
    Quantity defaultValueQuantity,
    Range defaultValueRange,
    Ratio defaultValueRatio,
    Reference defaultValueReference,
    SampledData defaultValueSampledData,
    Signature defaultValueSignature,
    Timing defaultValueTiming,
    ContactDetail defaultValueContactDetail,
    Contributor defaultValueContributor,
    DataRequirement defaultValueDataRequirement,
    Expression defaultValueExpression,
    ParameterDefinition defaultValueParameterDefinition,
    RelatedArtifact defaultValueRelatedArtifact,
    TriggerDefinition defaultValueTriggerDefinition,
    UsageContext defaultValueUsageContext,
    Dosage defaultValueDosage,
    Meta defaultValueMeta,
    Markdown meaningWhenMissing,
    String orderMeaning,
    Base64Binary fixedBase64Binary,
    bool fixedBoolean,
    Canonical fixedCanonical,
    Code fixedCode,
    Date fixedDate,
    FhirDateTime fixedDateTime,
    double fixedDecimal,
    Id fixedId,
    Instant fixedInstant,
    int fixedInteger,
    Markdown fixedMarkdown,
    Oid fixedOid,
    int fixedPositiveInt,
    String fixedString,
    Time fixedTime,
    int fixedUnsignedInt,
    FhirUri fixedUri,
    FhirUrl fixedUrl,
    Uuid fixedUuid,
    Address fixedAddress,
    Age fixedAge,
    Annotation fixedAnnotation,
    Attachment fixedAttachment,
    CodeableConcept fixedCodeableConcept,
    Coding fixedCoding,
    ContactPoint fixedContactPoint,
    Count fixedCount,
    Distance fixedDistance,
    Duration fixedDuration,
    HumanName fixedHumanName,
    Identifier fixedIdentifier,
    Money fixedMoney,
    Period fixedPeriod,
    Quantity fixedQuantity,
    Range fixedRange,
    Ratio fixedRatio,
    Reference fixedReference,
    SampledData fixedSampledData,
    Signature fixedSignature,
    Timing fixedTiming,
    ContactDetail fixedContactDetail,
    Contributor fixedContributor,
    DataRequirement fixedDataRequirement,
    Expression fixedExpression,
    ParameterDefinition fixedParameterDefinition,
    RelatedArtifact fixedRelatedArtifact,
    TriggerDefinition fixedTriggerDefinition,
    UsageContext fixedUsageContext,
    Dosage fixedDosage,
    Meta fixedMeta,
    String patternBase64Binary,
    bool patternBoolean,
    String patternCanonical,
    String patternCode,
    DateTime patternDate,
    DateTime patternDateTime,
    double patternDecimal,
    String patternId,
    DateTime patternInstant,
    int patternInteger,
    String patternMarkdown,
    String patternOid,
    int patternPositiveInt,
    String patternString,
    String patternTime,
    int patternUnsignedInt,
    String patternUri,
    String patternUrl,
    String patternUuid,
    Address patternAddress,
    Age patternAge,
    Annotation patternAnnotation,
    Attachment patternAttachment,
    CodeableConcept patternCodeableConcept,
    Coding patternCoding,
    ContactPoint patternContactPoint,
    Count patternCount,
    Distance patternDistance,
    Duration patternDuration,
    HumanName patternHumanName,
    Identifier patternIdentifier,
    Money patternMoney,
    Period patternPeriod,
    Quantity patternQuantity,
    Range patternRange,
    Ratio patternRatio,
    Reference patternReference,
    SampledData patternSampledData,
    Signature patternSignature,
    Timing patternTiming,
    ContactDetail patternContactDetail,
    Contributor patternContributor,
    DataRequirement patternDataRequirement,
    Expression patternExpression,
    ParameterDefinition patternParameterDefinition,
    RelatedArtifact patternRelatedArtifact,
    TriggerDefinition patternTriggerDefinition,
    UsageContext patternUsageContext,
    Dosage patternDosage,
    Meta patternMeta,
    List<ElementDefinitionExample> example,
    Date minValueDate,
    FhirDateTime minValueDateTime,
    Instant minValueInstant,
    Time minValueTime,
    double minValueDecimal,
    int minValueInteger,
    int minValuePositiveInt,
    int minValueUnsignedInt,
    Quantity minValueQuantity,
    Date maxValueDate,
    FhirDateTime maxValueDateTime,
    Instant maxValueInstant,
    Time maxValueTime,
    double maxValueDecimal,
    int maxValueInteger,
    int maxValuePositiveInt,
    int maxValueUnsignedInt,
    Quantity maxValueQuantity,
    int maxLength,
    List<Id> condition,
    List<ElementDefinitionConstraint> constraint,
    bool mustSupport,
    bool isModifier,
    String isModifierReason,
    bool isSummary,
    ElementDefinitionBinding binding,
    List<ElementDefinitionMapping> mapping,
  }) = ElementDefinition;

  const factory SpecialTypes.elementDefinitionSlicing({
    String id,
    @JsonKey(name: 'extension') List<FhirExtension> fhirExtension,
    List<FhirExtension> modifierExtension,
    List<ElementDefinitionDiscriminator> discriminator,
    String description,
    bool ordered,
    @JsonKey(unknownEnumValue: ElementDefinitionSlicingRules.unknown) ElementDefinitionSlicingRules rules,
  }) = ElementDefinitionSlicing;

  const factory SpecialTypes.elementDefinitionDiscriminator({
    String id,
    @JsonKey(name: 'extension') List<FhirExtension> fhirExtension,
    List<FhirExtension> modifierExtension,
    @JsonKey(unknownEnumValue: ElementDefinitionDiscriminatorType.unknown) ElementDefinitionDiscriminatorType type,
    String path,
  }) = ElementDefinitionDiscriminator;

  const factory SpecialTypes.elementDefinitionBase({
    String id,
    @JsonKey(name: 'extension') List<FhirExtension> fhirExtension,
    List<FhirExtension> modifierExtension,
    String path,
    int min,
    String max,
  }) = ElementDefinitionBase;

  const factory SpecialTypes.elementDefinitionType({
    String id,
    @JsonKey(name: 'extension') List<FhirExtension> fhirExtension,
    List<FhirExtension> modifierExtension,
    FhirUri code,
    List<Canonical> profile,
    List<Canonical> targetProfile,
    List<ElementDefinitionTypeAggregation> aggregation,
    @JsonKey(unknownEnumValue: ElementDefinitionTypeVersioning.unknown) ElementDefinitionTypeVersioning versioning,
  }) = ElementDefinitionType;

  const factory SpecialTypes.elementDefinitionExample({
    String id,
    @JsonKey(name: 'extension') List<FhirExtension> fhirExtension,
    List<FhirExtension> modifierExtension,
    String label,
    Base64Binary valueBase64Binary,
    bool valueBoolean,
    Canonical valueCanonical,
    Code valueCode,
    Date valueDate,
    FhirDateTime valueDateTime,
    double valueDecimal,
    Id valueId,
    Instant valueInstant,
    int valueInteger,
    Markdown valueMarkdown,
    Oid valueOid,
    int valuePositiveInt,
    String valueString,
    Time valueTime,
    int valueUnsignedInt,
    FhirUri valueUri,
    FhirUrl valueUrl,
    Uuid valueUuid,
    Address valueAddress,
    Age valueAge,
    Annotation valueAnnotation,
    Attachment valueAttachment,
    CodeableConcept valueCodeableConcept,
    Coding valueCoding,
    ContactPoint valueContactPoint,
    Count valueCount,
    Distance valueDistance,
    Duration valueDuration,
    HumanName valueHumanName,
    Identifier valueIdentifier,
    Money valueMoney,
    Period valuePeriod,
    Quantity valueQuantity,
    Range valueRange,
    Ratio valueRatio,
    Reference valueReference,
    SampledData valueSampledData,
    Signature valueSignature,
    Timing valueTiming,
    ContactDetail valueContactDetail,
    Contributor valueContributor,
    DataRequirement valueDataRequirement,
    Expression valueExpression,
    ParameterDefinition valueParameterDefinition,
    RelatedArtifact valueRelatedArtifact,
    TriggerDefinition valueTriggerDefinition,
    UsageContext valueUsageContext,
    Dosage valueDosage,
    Meta valueMeta,
  }) = ElementDefinitionExample;

  const factory SpecialTypes.elementDefinitionConstraint({
    String id,
    @JsonKey(name: 'extension') List<FhirExtension> fhirExtension,
    List<FhirExtension> modifierExtension,
    Id key,
    String requirements,
    @JsonKey(unknownEnumValue: ElementDefinitionConstraintSeverity.unknown)
        ElementDefinitionConstraintSeverity severity,
    String human,
    String expression,
    String xpath,
    Canonical source,
  }) = ElementDefinitionConstraint;

  const factory SpecialTypes.elementDefinitionBinding({
    String id,
    @JsonKey(name: 'extension') List<FhirExtension> fhirExtension,
    List<FhirExtension> modifierExtension,
    @JsonKey(unknownEnumValue: ElementDefinitionBindingStrength.unknown) ElementDefinitionBindingStrength strength,
    String description,
    Canonical valueSet,
  }) = ElementDefinitionBinding;

  const factory SpecialTypes.elementDefinitionMapping({
    String id,
    @JsonKey(name: 'extension') List<FhirExtension> fhirExtension,
    List<FhirExtension> modifierExtension,
    Id identity,
    Code language,
    @JsonKey(name: 'map') String elementMap,
    String comment,
  }) = ElementDefinitionMapping;
  // ********* /Element Definition *********

  const factory SpecialTypes.fhirExtension({
    String id,
    @JsonKey(name: 'extension') List<FhirExtension> fhirExtension,
    FhirUri url,
    Base64Binary valueBase64Binary,
    bool valueBoolean,
    Canonical valueCanonical,
    Code valueCode,
    Date valueDate,
    FhirDateTime valueDateTime,
    double valueDecimal,
    Id valueId,
    Instant valueInstant,
    int valueInteger,
    Markdown valueMarkdown,
    Oid valueOid,
    int valuePositiveInt,
    String valueString,
    Time valueTime,
    int valueUnsignedInt,
    FhirUri valueUri,
    FhirUrl valueUrl,
    Uuid valueUuid,
    Address valueAddress,
    Age valueAge,
    Annotation valueAnnotation,
    Attachment valueAttachment,
    CodeableConcept valueCodeableConcept,
    Coding valueCoding,
    ContactPoint valueContactPoint,
    Count valueCount,
    Distance valueDistance,
    Duration valueDuration,
    HumanName valueHumanName,
    Identifier valueIdentifier,
    Money valueMoney,
    Period valuePeriod,
    Quantity valueQuantity,
    Range valueRange,
    Ratio valueRatio,
    Reference valueReference,
    SampledData valueSampledData,
    Signature valueSignature,
    Timing valueTiming,
    ContactDetail valueContactDetail,
    Contributor valueContributor,
    DataRequirement valueDataRequirement,
    Expression valueExpression,
    ParameterDefinition valueParameterDefinition,
    RelatedArtifact valueRelatedArtifact,
    TriggerDefinition valueTriggerDefinition,
    UsageContext valueUsageContext,
    Dosage valueDosage,
    Meta valueMeta,
  }) = FhirExtension;

  const factory SpecialTypes.meta({
    String id,
    @JsonKey(name: 'extension') List<FhirExtension> fhirExtension,
    Id versionId,
    Instant lastUpdated,
    Uri source,
    List<Canonical> profile,
    List<Coding> security,
    List<Coding> tag,
  }) = Meta;

  const factory SpecialTypes.narrative({
    String id,
    @JsonKey(name: 'extension') List<FhirExtension> fhirExtension,
    @JsonKey(unknownEnumValue: NarrativeStatus.unknown) NarrativeStatus status,
    String div,
  }) = Narrative;

  const factory SpecialTypes.reference({
    String id,
    @JsonKey(name: 'extension') List<FhirExtension> fhirExtension,
    String reference, //resourceType/id
    //todo: map to resourceType/id
    String resourceType, //resourceType
    //todo: map to resourceType
    FhirUri type,
    Identifier identifier,
    String display,
  }) = Reference;

  factory SpecialTypes.fromJson(Map<String, dynamic> json) => _$SpecialTypesFromJson(json);
}
